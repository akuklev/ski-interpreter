(()=>{var t={10:(t,n,s)=>{const e=s(592);t.exports={...e},"undefined"!=typeof window&&(window.SKI=e.SKI)},592:t=>{class n{combine(...t){return t.length>0?new s(this,t):this}step(){return null}run(t=1e3){let n=this;for(let s=0;s<t;s++){const t=n.step();if(!t)return n;n=t}throw new Error("Failed to resolve expression in "+t+" steps")}toString(){throw new Error("toString() undefined for generic AST")}}class s extends n{constructor(t,n){super(),this.fun=t,this.args=n}combine(...t){return 0===t.length?this:new s(this.fun,[...this.args,...t])}step(){let t=0;const n=this.fun.step();n&&t++;const s=[];for(const n of this.args){const e=n.step();s.push(e??n),e&&t++}if(t)return(n??this.fun).combine(...s);if(this.fun instanceof r&&this.args.length>=this.fun.arity){const t=[...this.args],n=t.splice(0,this.fun.arity);return this.fun.impl(...n).combine(...t)}return null}toString(){return this.fun.toString()+this.args.map((t=>"("+t+")")).join("")}}class e extends n{constructor(t){super(),this.name=t}toString(){return this.name}}class r extends e{constructor(t,n,s){super(t),this.arity=n,this.impl=s}}class i extends n{combine(...t){return t.length?t.shift().combine(...t):this}toString(){return"<empty>"}}t.exports={SKI:class{constructor(){this.known={},this.add("I",[1,t=>t]),this.add("K",[2,(t,n)=>t]),this.add("S",[3,(t,n,s)=>t.combine(s).combine(n.combine(s))])}add(t,s,e=""){if("string"==typeof s)s=this.parse(s);else if(Array.isArray(s))s=new r(t,s[0],s[1]);else if(!(s instanceof n))throw new Error("add: impl must be an Ast, a string, or a [arity, impl] pair");return this.known[t]=s,this}parse(t){const n=Object.keys(this.known).join("|"),s=new RegExp("[()]|"+n+"|(?:[a-z_][a-z_0-9]*)","g"),r=t.match(/^\s*([a-z][a-z_0-9]*)\s*=(.*)/i);if(r){const t=r[1],n=this.parse(r[2]);return this.add(t,n),n}const o=[...t.matchAll(s)].map((t=>t[0])),h=new i,a=[h];for(const n of o)if("("===n)a.push(h);else if(")"===n){if(a.length<2)throw new Error("unbalanced input: "+t);const n=a.pop(),s=a.pop();a.push(s.combine(n))}else{const t=a.pop(),s=this.known[n]??new e(n);a.push(t.combine(s))}if(1!==a.length)throw new Error("unbalanced input: "+t);return a[0]}}}}},n={};!function s(e){var r=n[e];if(void 0!==r)return r.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,s),i.exports}(10)})();