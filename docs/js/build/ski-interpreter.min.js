(()=>{var t={10:(t,s,e)=>{const n=e(592);t.exports={...n},"undefined"!=typeof window&&(window.SKI=n.SKI)},592:t=>{class s{apply(...t){return t.length>0?new e(this,...t):this}expand(){return this}reduce(t){return null}step(){return null}run(t={},...e){t instanceof s&&(e.unshift(t),t={});let n=e?this.apply(...e):this,r=t.count??0;const i=(t.max??1e3)+r;let a=!1;for(;r<i;r++){const t=n.step();if(!t){a=!0;break}n=t}return{final:a,steps:r,result:n}}isNative(){return!1}equals(t){return this===t}toString(){throw new Error("toString() undefined for generic AST")}}class e extends s{constructor(t,...s){super(),this.fun=t,this.args=s,this.final=!1}apply(...t){return 0===t.length?this:this.fun.apply(...this.args,...t)}expand(){return this.fun.expand().apply(...this.args.map((t=>t.expand())))}step(){if(this.final)return null;if(this.fun.fast){const t=this.fun.reduce(this.args);if(t)return t}const t=this.fun.step();let s=t?1:0;const e=[];for(const t of this.args){const n=t.step();e.push(n??t),n&&s++}if(s)return(t??this.fun).apply(...e);return this.fun.reduce(this.args)||(this.final=!0,null)}equals(t){if(!(t instanceof e))return!1;if(t.args.length!==this.args.length)return!1;if(!this.fun.equals(t.fun))return!1;for(let s=0;s<this.args.length;s++)if(!this.args[s].equals(t.args[s]))return!1;return!0}toString(){return this.fun.toString()+this.args.map((t=>"("+t+")")).join("")}}class n extends s{constructor(t){super(),this.name=t}toString(){return this.name}}class r extends n{constructor(t,s,e,n={}){super(t),this.arity=s,this.impl=e,n.fast&&(this.fast=!0),void 0!==n.note&&(this.note=n.note)}reduce(t){if(t.length<this.arity)return null;const s=t.splice(this.arity);return this.impl(...t).apply(...s)}isNative(){return!0}}class i extends s{apply(...t){return t.length?t.shift().apply(...t):this}toString(){return"<empty>"}}class a extends n{constructor(t,s){super(t),this.impl=s}expand(){return this.impl.expand()}step(){return this.impl}toString(){return this.outdated?this.impl.toString():super.toString()}}const o={I:[1,t=>t,{fast:!0,note:"x -> x"}],K:[2,(t,s)=>t,{fast:!0,note:"(x y) -> x"}],S:[3,(t,s,e)=>t.apply(e,s.apply(e)),{note:"(x y z) -> x z (y z)"}],B:[3,(t,s,e)=>t.apply(s.apply(e)),{note:"(x y z) -> x (y z)"}],C:[3,(t,s,e)=>t.apply(e).apply(s),{note:"(x y z) -> x z y"}],W:[2,(t,s)=>t.apply(s).apply(s),{note:"(x y) -> x y y"}]};class p{constructor(t={}){this.known={};const s=t.allow??"SKI";for(const t of s.split(""))this.add(t,o[t])}add(t,e,n){if("string"==typeof e)e=new a(t,this.parse(e));else if(Array.isArray(e))e=new r(t,e[0],e[1],e[2]??{});else{if(!(e instanceof s))throw new Error("add: impl must be an Ast, a string, or a [arity, impl] pair");e=new a(t,e)}return void 0!==n&&(e.note=n),this.known[t]=e,this}remove(t){return this.known[t].outdated=!0,delete this.known[t],this}getTerms(){return{...this.known}}parse(t,s={}){const e=[...t.matchAll(/([()A-Z]|[a-z_][a-z_0-9]*)|\s+|($)/gys)],r=e.pop();if(""!==r[2])throw new Error("Unknown tokens in string starting with "+t.substring(r.index));const a=e.map((t=>t[1])).filter((t=>void 0!==t)),o=new i,p=[o];for(const e of a)if("("===e)p.push(o);else if(")"===e){if(p.length<2)throw new Error("unbalanced input: "+t);const s=p.pop(),e=p.pop();p.push(e.apply(s))}else{const t=p.pop(),r=this.known[e]??(s[e]=s[e]??new n(e));p.push(t.apply(r))}if(1!==p.length)throw new Error("unbalanced input: "+t);return p[0]}}class h{constructor(t,s,e,n,...r){this.expect=t.parse(n,s),this.max=e.max,this.note=e.note,this.args=r.map((e=>t.parse(e,s)))}check(t){const s=t.run({max:this.max},...this.args);return{pass:s.final&&this.expect.equals(s.result),count:s.steps,found:s.result,expected:this.expect,args:this.args}}}class u{constructor(t={},...s){this.env=new p({allow:t.allow}),this.vars={},this.cases=[],this.title=t.title,this.descr=t.descr;for(const t of s)this.add(...t)}add(t={},...s){if("string"==typeof t&&(s.unshift(t),t={}),s.length<1)throw new Error("Too little data for a testcase");return this.cases.push(new h(this.env,this.vars,t,s.shift(),...s)),this}check(t){"string"==typeof t&&(t=this.env.parse(t));const s=this.cases.map((s=>s.check(t)));return{pass:s.reduce(((t,s)=>t&&s.pass),!0),details:s}}show(){return[...this.cases]}}p.Quest=u,t.exports={SKI:p,Quest:u}}},s={};!function e(n){var r=s[n];if(void 0!==r)return r.exports;var i=s[n]={exports:{}};return t[n](i,i.exports,e),i.exports}(10)})();