(()=>{var t={10:(t,n,e)=>{const r=e(592);t.exports={...r},"undefined"!=typeof window&&(window.SKI=r.SKI)},592:t=>{class n{combine(...t){return t.length>0?new e(this,...t):this}expand(){return this}reduce(t){return null}step(){return null}run(t=1e3){let n=this;for(let e=0;e<t;e++){const t=n.step();if(!t)return n;n=t}throw new Error("Failed to resolve expression in "+t+" steps")}isNative(){return!1}toString(){throw new Error("toString() undefined for generic AST")}}class e extends n{constructor(t,...n){super(),this.fun=t,this.args=n,this.final=!1}combine(...t){return 0===t.length?this:this.fun.combine(...this.args,...t)}expand(){return this.fun.expand().combine(...this.args.map((t=>t.expand())))}step(){if(this.final)return null;const t=this.fun.step();let n=t?1:0;const e=[];for(const t of this.args){const r=t.step();e.push(r??t),r&&n++}if(n)return(t??this.fun).combine(...e);return this.fun.reduce(this.args)||(this.final=!0,null)}toString(){return this.fun.toString()+this.args.map((t=>"("+t+")")).join("")}}class r extends n{constructor(t){super(),this.name=t}toString(){return this.name}}class s extends r{constructor(t,n,e){super(t),this.arity=n,this.impl=e}reduce(t){if(t.length<this.arity)return null;const n=t.splice(this.arity);return this.impl(...t).combine(...n)}isNative(){return!0}}class i extends n{combine(...t){return t.length?t.shift().combine(...t):this}toString(){return"<empty>"}}class o extends r{constructor(t,n){super(t),this.impl=n}expand(){return this.impl.expand()}step(){return this.impl}toString(){return this.outdated?this.impl.toString():super.toString()}}t.exports={SKI:class{constructor(){this.known={},this.add("I",[1,t=>t],"x -> x"),this.add("K",[2,(t,n)=>t],"(x y) -> x"),this.add("S",[3,(t,n,e)=>t.combine(e).combine(n.combine(e))],"(x y z) -> x z (y z)")}add(t,e,r=""){if("string"==typeof e)e=new o(t,this.parse(e));else if(Array.isArray(e))e=new s(t,e[0],e[1]);else{if(!(e instanceof n))throw new Error("add: impl must be an Ast, a string, or a [arity, impl] pair");e=new o(t,e)}return e.note=r,this.known[t]=e,this}remove(t){return this.known[t].outdated=!0,delete this.known[t],this}getTerms(){return{...this.known}}parse(t){const n=[...t.matchAll(/([()A-Z]|[a-z_][a-z_0-9]*)|\s+|($)/gys)],e=n.pop();if(""!==e[2])throw new Error("Unknown tokens in string starting with "+t.substring(e.index));const s=n.map((t=>t[1])).filter((t=>void 0!==t)),o=new i,u=[o];for(const n of s)if("("===n)u.push(o);else if(")"===n){if(u.length<2)throw new Error("unbalanced input: "+t);const n=u.pop(),e=u.pop();u.push(e.combine(n))}else{const t=u.pop(),e=this.known[n]??new r(n);u.push(t.combine(e))}if(1!==u.length)throw new Error("unbalanced input: "+t);return u[0]}}}}},n={};!function e(r){var s=n[r];if(void 0!==s)return s.exports;var i=n[r]={exports:{}};return t[r](i,i.exports,e),i.exports}(10)})();