[
  {
    "title": "Warm up",
    "descr": [
      "Provide a term that returns <code>K</code> for <code>I</code> and <code>I</code> for <code>K</code>."
    ],
    "subst": "&phi;",
    "cases": [
      ["phi", "phi I", "K"],
      ["phi", "phi K", "I"]
    ]
  },
  {
    "title": "not",
    "descr": [
      "Implement <code>not x</code>, that is,",
      "return <code>K</code> for <code>KI</code> and <code>KI</code> for <code>K</code>"
    ],
    "subst": "&phi;",
    "cases": [
      ["phi", "phi (KI) x y", "x"],
      ["phi", "phi K x y", "y"]
    ]
  },
  {
    "title": "and",
    "descr": [
      "make a term that takes 2 arguments and returns true (<code>K</code>)",
      " if and only if both are true"
    ],
    "subst": "&phi;",
    "cases": [
      ["phi", "phi K K", "K"],
      ["phi", "phi (KI) K", "KI"],
      ["phi", "phi K (KI)", "KI"],
      ["phi", "phi (KI) (KI)", "KI"]
    ]
  },
  {
    "title": "or",
    "descr": [
      "the title says it"
    ],
    "subst": "&phi;",
    "cases": [
      ["phi", "phi K K", "K"],
      ["phi", "phi (KI) K", "K"],
      ["phi", "phi K (KI)", "K"],
      ["phi", "phi (KI) (KI)", "KI"]
    ]
  },
  {
    "title": "nand",
    "descr": [
      "NAND (not and) is true unless both ot its inputs are true."
    ],
    "subst": "&phi;",
    "cases": [
      ["phi", "phi K K", "KI"],
      ["phi", "phi (KI) K", "K"],
      ["phi", "phi K (KI)", "K"],
      ["phi", "phi (KI) (KI)", "K"]
    ]
  },
  {
    "title": "Postfix if statement",
    "descr": [
      "Often the then/else branches are known before the condition that picks one of them.",
      "Provide a function that takes then/else terms and feeds them to its third argument."
    ],
    "subst": "&phi;",
    "cases": [
      ["phi", "phi x y K", "x"],
      ["phi", "phi x y (KI)", "y"],
      ["phi", "phi x y (SK)", "y"]
    ]
  }
]
