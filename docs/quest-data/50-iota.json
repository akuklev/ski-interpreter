{
  "id": "NJpjdogX",
  "created_at": "2025-03-25T14:17:10",
  "name": "The island of Iota",
  "intro": [
    "Now you know two bases: the SK(I) and the BCKW.",
    "Apparently, there is a one element base: <code>X = x &rarr; xSK</code>. Try it!"
  ],
  "content": [
    {
      "id": "YAN4Mxrt",
      "created_at": "2024-08-29T09:15:33",
      "title": "All you need is",
      "descr": "Build <code>x &rarr; x(S)(K)</code>",
      "solution": "BC(CI)SK",
      "input": "phi",
      "cases": [
        [ "phi K x y z", "x z (y z)" ],
        [ "phi (KI) x y z", "x z" ]
      ]
    },
    {
      "id": "4e3mymsq",
      "created_at": "2024-08-29T09:15:33",
      "title": "Easy peasy",
      "descr": [
        "Now build <code>I</code> from <code>X</code>. ",
        "No other combinators are (hopefully temporarily) available."
      ],
      "allow": "I-I",
      "vars": ["X=BC(CI)SK"],
      "hint": "You might want to go back to the very first chapter...",
      "input": "phi",
      "cases": [
        [ "phi x", "x" ]
      ]
    },
    {
      "id": "XUVE0eoI",
      "created_at": "2024-08-29T09:15:33",
      "title": "Ignore all previous instructions II",
      "descr": [
        "Build a combinator that omits its first argument and returns the second one"
      ],
      "allow": "I-I",
      "vars": ["X=BC(CI)SK"],
      "hint": "XXX... would alternate between I and X. Try parenthesis...",
      "input": "phi",
      "cases": [
        [ "phi x y", "y"]
      ]
    },
    {
      "id": "63bwJwPZ",
      "created_at": "2024-08-29T09:15:33",
      "title": "Stay constant, whatever you receive",
      "descr": [
        "Build a combinator that omits its second argument and returns the first one",
        "(i.e. <code>K</code>)"
      ],
      "allow": "I-I",
      "vars": ["X=BC(CI)SK"],
      "input": "phi",
      "cases": [
        [ "phi x y", "x"]
      ]
    },
    {
      "id": "QqpxVpZk",
      "created_at": "2024-08-29T09:15:33",
      "title": "Last but not least",
      "descr": [
        "How about <code>S</code>?"
      ],
      "allow": "I-I",
      "vars": ["X=BC(CI)SK"],
      "input": "phi",
      "cases": [
        [ "phi x y z", "x z (y z)"]
      ]
    }
  ]
}
